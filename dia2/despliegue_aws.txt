#PASOS PARA DESPLIEGUE EN AWS
1 - actualizar ubuntu e instalar librerias
sudo apt update
sudo apt install python3-pip python3-dev libpq-dev postgresql postgresql-contrib curl

2 - CREAMOS LA BASE DE DATOS EN postgresql
sudo -u postgres psql

CREATE DATABASE db_ecommerce_g24;

CREATE USER codigo WITH PASSWORD 'codigo2024';

ALTER ROLE codigo SET client_encoding TO 'utf8';
ALTER ROLE codigo SET default_transaction_isolation TO 'read committed';
ALTER ROLE codigo SET timezone TO 'UTC';

GRANT ALL PRIVILEGES ON DATABASE db_ecommerce_g24 TO codigo;

\q

3 - CREAMOS ENTORNO VIRTUAL Y CONFIGURAMOS python3

sudo apt install python3.10-venv python3-pip python3-dev

clonamos el repositorio en nuestra servidor
ingresamos al directorio creado

creamos entorno virtual

python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt

creamos archivo .env y copiamos este codigo

CLOUDINARY_CLOUD_NAME=
CLOUDINARY_API_KEY=
CLOUDINARY_API_SECRET=
PG_DB=db_ecommerce_g24
PG_USER=codigo
PG_PWD=codigo2024
PG_HOST=127.0.0.1
PG_PORT=5432

ejecutar

python3 manage.py migrate
python3 manage.py loaddata data.json

python3 manage.py createsuperuser


python3 manage.py runserver 0.0.0.0:8000
------

DESPLIEGUE CON GUNICORN Y NGINX
1 - probamos gunicorn
recolectamos staticos

python3 manage.py collectstatic
gunicorn --bind 0.0.0.0:8000 ecommerce.wsgi

2 - copiar los archivos al servidor
primero se debe subir por git y hacer git pull en el servidor

ingresamos a la carpeta awsconf

sudo cp gunicorn.socket /etc/systemd/system/gunicorn.socket

sudo cp gunicorn.service /etc/systemd/system/gunicorn.service



3 - activamos nuestro socket

sudo systemctl start gunicorn.socket
sudo systemctl enable gunicorn.socket

4 - verificamos el status del socket y servicio

sudo systemctl status gunicorn.socket

NOTA: sino est acorriendo ejecutar esto
	file /run/gunicorn.sock
	sudo systemctl status gunicorn

curl --unix-socket /run/gunicorn.sock localhost

5 - configuramos nginx

sudo apt install nginx
sudo cp shop /etc/nginx/sites-available/shop

sudo ln -s /etc/nginx/sites-available/shop /etc/nginx/sites-enabled

sudo nginx -t

sudo usermod -a -G ubuntu www-data

sudo chown -R :www-data /home/ubuntu/ecommerce-api-aws/static

sudo systemctl restart nginx


























